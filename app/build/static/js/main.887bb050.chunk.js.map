{"version":3,"sources":["constants/ActionTypes.js","redux/reducers/marker.js","redux/index.js","redux/store.js","serviceWorker.js","redux/actions/marker.js","components/addMarker.js","components/Map.js","components/mapContainer.js","App.js","index.js"],"names":["SET_MARKER_DATA","INITIAL_STATE","isEditMarker","editData","markerList","rootReducer","combineReducers","marker","state","arguments","length","undefined","action","type","Object","objectSpread","content","store","createStore","compose","applyMiddleware","thunk","window","devToolsExtension","f","Boolean","location","hostname","match","baseURL","process","setMarkerCreationData","getMarkerList","dispatch","axios","get","then","response","data","catch","error","console","log","updateMarkerData","obj","MarkerForm","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","form","validateFields","err","value","title","address","updateMarker","id","createMarker","handleOk","resetFields","notification","open","message","description","concat","icon","react_default","a","createElement","theme","showModal","setState","visible","handleCancel","nextProps","setFieldsValue","getFieldDecorator","es_button","onClick","modal","onOk","onCancel","footer","es_form","onSubmit","className","Item","label","rules","required","input","prefix","style","color","placeholder","ant-click-animating-without-extra-node","htmlType","Component","AddMarkerForm","create","name","actionCreators","post","status","put","connect","Markers","_ref","places","map","place","index","lib","key","position","lat","lng","Map","_ref2","zoom","center","defaultZoom","defaultCenter","Map_Markers","MapWithMarker","toConsumableArray","Map_Map","React","withScriptjs","withGoogleMap","Meta","width","height","colStyle","points","MapContainer","editMarkerItem","bind","assertThisInitialized","deleteMarkerItem","renderMarked","intervalId","setInterval","getMarkers","item","push","latitude","longitude","clearInterval","deleteMarker","_this2","formItemLayout","labelCol","span","wrapperCol","col","lg","xl","card","margin","actions","assign","labelAlign","row","justify","xs","sm","md","components_Map","googleMapURL","loadingElement","spin","size","containerElement","mapElement","extra","addMarker","delete","App","mapContainer","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.887bb050.chunk.js","sourcesContent":["export const SET_MARKER_DATA = 'SET_MARKER_DATA';","import { SET_MARKER_DATA } from '../../constants/ActionTypes';\r\n\r\nconst INITIAL_STATE = {\r\n  isEditMarker: false,\r\n  editData: {},\r\n  markerList: []\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action = {}) => {\r\n  switch (action.type) {\r\n    case SET_MARKER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.content,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport marker from './reducers/marker';\r\n\r\nconst rootReducer = combineReducers({\r\n\tmarker\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore (\r\n    rootReducer,\r\n    compose (applyMiddleware(thunk), window.devToolsExtension ? window.devToolsExtension() : f => {return f})\r\n);\r\n\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { notification, Icon } from 'antd';\r\nimport { SET_MARKER_DATA } from '../../constants/ActionTypes';\r\n\r\nconst baseURL = process.env.REACT_APP_API_HOST;\r\n\r\nexport function setMarkerCreationData(content) {\r\n  return {\r\n    type: SET_MARKER_DATA,\r\n    content,\r\n  };\r\n}\r\n\r\nexport function getMarkerList() {\r\n  return (dispatch) => {\r\n    return axios.get(baseURL + 'api/v1/markers').then((response) => {\r\n      dispatch(setMarkerCreationData({\r\n        markerList: response.data.data\r\n      }));\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  };\r\n}\r\n\r\nexport function createMarker(title) {\r\n  return () => {\r\n    return axios.post(baseURL + `api/v1/markers/createNewMarker?title=${title}`).then((response) => {\r\n      notification.open({\r\n        message: `${response.data.status}`,\r\n        description: `${response.data.marker ? `${response.data.marker.title} ${response.data.message}` : `${response.data.message}`}`,\r\n        icon: <Icon type=\"info-circle\" theme=\"twoTone\" />\r\n      });\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  };\r\n}\r\n\r\nexport function updateMarker(id, title) {\r\n  return () => {\r\n    return axios.put(baseURL + `api/v1/markers/${id}/updateMarker?title=${title}`).then((response) => {\r\n      notification.open({\r\n        message: `${response.data.status}`,\r\n        description: `${response.data.marker ? `${response.data.marker.title} ${response.data.message}` : `${response.data.message}`}`,\r\n        icon: <Icon type=\"info-circle\" theme=\"twoTone\" />\r\n      });\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  };\r\n}\r\n\r\nexport function deleteMarker(id) {\r\n  return () => {\r\n    return axios.delete(baseURL + `api/v1/markers/${id}`).then((response) => {\r\n      notification.open({\r\n        message: `${response.data.status}`,\r\n        description: `${response.data.marker.title} ${response.data.message}`,\r\n        icon: <Icon type=\"info-circle\" theme=\"twoTone\" />\r\n      });\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  };\r\n}\r\n\r\nexport function updateMarkerData(obj) {\r\n  return (dispatch) => {\r\n    dispatch(setMarkerCreationData(obj));\r\n  };\r\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Icon, Input, Button, Modal, notification } from 'antd';\nimport { getMarkerList, createMarker, updateMarker, updateMarkerData } from '../redux/actions/marker';\n\nclass MarkerForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const { form } = this.props;\n        if (this.props.marker.editData !== nextProps.marker.editData) {\n            form.setFieldsValue({\n                address: nextProps.marker.editData.title\n            });\n        }\n    }\n\n    componentDidMount() {\n        this.props.getMarkerList();\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, value) => {\n            if (!err) {\n                if (this.props.marker.editData.title !== value.address) {\n                    if (this.props.marker.isEditMarker === true) {\n                        this.props.updateMarker(this.props.marker.editData.id, value.address);\n                        this.props.updateMarkerData({ isEditMarker: false });\n                    } else {\n                        this.props.createMarker(value.address);\n                    }\n                    this.handleOk();\n                    this.props.form.resetFields();\n                    this.props.getMarkerList();\n                }\n                else {\n                    notification.open({\n                        message: `NO CHANGE DETECTED`,\n                        description: `Please enter a valid location to update ${this.props.marker.editData.title}`,\n                        icon: <Icon type=\"info-circle\" theme=\"twoTone\" />\n                    });\n                }\n            }\n        });\n    }\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    }\n\n    handleOk = (e) => {\n        if (this.props.marker.isEditMarker === true) {\n            this.props.updateMarkerData({ isEditMarker: false });\n        } else {\n            this.setState({\n                visible: false,\n            });\n        }\n        this.props.getMarkerList();\n    }\n\n    handleCancel = (e) => {\n        e.preventDefault();\n        this.props.form.resetFields();\n        if (this.props.marker.isEditMarker === true) {\n            this.props.updateMarkerData({ isEditMarker: false });\n        } else {\n            this.setState({\n                visible: false,\n            });\n        }\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <span>\n                <Button type=\"primary\" onClick={this.showModal}><Icon type=\"plus-circle\" /> Add Location</Button>\n                <Modal\n                    title={this.props.marker.isEditMarker === true ? `Edit ${this.props.marker.editData.title} Location` : `Add a new Location`}\n                    visible={this.props.marker.isEditMarker === true ? true : this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    footer={null}\n                >\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                        <Form.Item label={this.props.marker.isEditMarker === true ? `Edit your location` : `Enter your desired location`}>\n                            {getFieldDecorator('address', {\n                                rules: [{ required: true, message: 'Please enter your desired place name!' }],\n                            })(\n                                <Input prefix={<Icon type=\"picture\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Address\" />\n                            )}\n                        </Form.Item>\n                        <div className=\"ant-modal-footer\">\n                            <Button type=\"default\" onClick={this.handleCancel} ant-click-animating-without-extra-node=\"false\">Cancel</Button>\n                            <Button htmlType=\"submit\" type=\"primary\">OK</Button>\n                        </div>\n                    </Form>\n                </Modal>\n            </span>\n        );\n    }\n}\n\nconst AddMarkerForm = Form.create({ name: 'add_update_marker' })(MarkerForm);\n\nconst actionCreators = {\n    getMarkerList,\n    createMarker,\n    updateMarker,\n    updateMarkerData\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        marker: state.marker\n    };\n};\n\nexport default connect(mapStateToProps, actionCreators)(AddMarkerForm)\n","import React from \"react\";\nimport {\n    withGoogleMap,\n    GoogleMap,\n    Marker,\n    withScriptjs\n} from \"react-google-maps\";\n\nconst Markers = ({ places }) => {\n    return places.map((place, index) => {\n        return (\n            <Marker key={index} position={{ lat: place.lat, lng: place.lng }} />\n        );\n    });\n};\n\nconst Map = ({ places, zoom, center }) => {\n    return (\n        <GoogleMap defaultZoom={zoom} defaultCenter={center}>\n            <Markers places={places} />\n        </GoogleMap>\n    );\n};\n\nclass MapWithMarker extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { places: this.props.places }; //initialize initial state from props\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.places !== nextProps.places) {\n            this.setState({\n                places: nextProps.places\n            });\n        }\n        this.setState({\n            places: [...nextProps.places]\n        });\n    }\n\n    render() {\n        return (\n            <Map\n                center={this.props.center}\n                zoom={this.props.zoom}\n                places={this.state.places}\n            />\n        );\n    }\n}\n\nexport default withScriptjs(withGoogleMap(MapWithMarker));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col, Form, Spin, Card, Icon } from 'antd';\nimport AddMarkerForm from './addMarker';\nimport Map from \"./Map\";\nimport { getMarkerList, updateMarkerData, deleteMarker } from '../redux/actions/marker';\n\nconst { Meta } = Card;\n\nconst style = {\n    width: '100%',\n    height: '100%'\n}\n\nconst colStyle = {\n    height: '100vh'\n}\n\nlet points = [];\n\nclass MapContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.editMarkerItem = this.editMarkerItem.bind(this);\n        this.deleteMarkerItem = this.deleteMarkerItem.bind(this);\n        this.renderMarked = this.renderMarked.bind(this);\n    }\n\n    getMarkers() {\n        this.props.getMarkerList();\n    }\n\n    componentDidMount() {\n        this.intervalId = setInterval(this.getMarkers.bind(this), 1000);\n        this.props.marker.markerList.map((item, index) =>\n            points.push({ id: item.id, name: item.title, title: item.title, lat: item.latitude, lng: item.longitude })\n        );\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.intervalId);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.marker.markerList !== nextProps.marker.markerList) {\n            // nextProps.getMarkerList();\n            points = [];\n            nextProps.marker.markerList.map((item, index) =>\n                points.push({ id: item.id, name: item.title, title: item.title, lat: item.latitude, lng: item.longitude })\n            );\n        }\n    }\n\n    editMarkerItem(id, title) {\n        this.props.updateMarkerData({ isEditMarker: true, editData: { id: id, title: title } });\n    }\n\n    deleteMarkerItem(id) {\n        this.props.deleteMarker(id);\n        this.props.getMarkerList();\n        this.renderMarked();\n    }\n\n    renderMarked() {\n        const formItemLayout = {\n            labelCol: { span: 10 },\n            wrapperCol: { span: 14 },\n        };\n        return (this.props.marker.markerList.length >= 1 ?\n            this.props.marker.markerList.map((item, index) => (\n                <Col key={`${index}`} lg={12} xl={12}>\n                    <Card\n                        title={item.title}\n                        type=\"inner\"\n                        style={{ margin: \"5px\" }}\n                        actions={[<Icon type=\"edit\" onClick={(e) => this.editMarkerItem(item.id, item.title)} />, <Icon type=\"delete\" onClick={(e) => this.deleteMarkerItem(item.id)} />]}\n                    >\n                        <Meta\n                            description={<Form labelAlign={'left'} {...formItemLayout}>\n                                <Form.Item className=\"map-marker\"\n                                    label=\"Latitude\"\n                                >\n                                    <span className=\"ant-form-text\">{item.latitude}</span>\n                                </Form.Item>\n                                <Form.Item className=\"map-marker\"\n                                    label=\"Longitude\"\n                                >\n                                    <span className=\"ant-form-text\">{item.longitude}</span>\n                                </Form.Item>\n                            </Form>}\n                        />\n                    </Card>\n                </Col>\n            ))\n            : <h3>No Locations Added</h3>\n        )\n    }\n\n    render() {\n        return (\n            <Row type=\"flex\" justify=\"space-between\">\n                <Col xs={24} sm={24} md={15} lg={15} xl={15} style={colStyle}>\n                    <Map\n                        googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBq5bd9aDDbWnOr8hEfyXTeTzHdIO82CL0\"\n                        loadingElement={<Spin size=\"large\" />}\n                        containerElement={<div style={colStyle} />}\n                        mapElement={<div style={style} />}\n                        center={{ lat: 51.1726158, lng: 10.2329033 }}\n                        zoom={6}\n                        places={points}\n                    />\n                </Col>\n                <Col xs={24} sm={24} md={9} lg={9} xl={9}>\n                    <Card\n                        title={<h2 style={{ margin: 0 }}>Locations</h2>}\n                        extra={<AddMarkerForm />}\n                    >\n                        <Row type=\"flex\" justify=\"space-between\">\n                            {this.renderMarked() ? this.renderMarked() : <Spin size=\"large\" />}\n                        </Row>\n                    </Card>\n                </Col>\n\n            </Row>\n        );\n    }\n}\n\nconst actionCreators = {\n    getMarkerList,\n    updateMarkerData,\n    deleteMarker\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        marker: state.marker\n    };\n};\n\nexport default connect(mapStateToProps, actionCreators)(MapContainer);\n","import React from 'react';\nimport MapContainer from './components/mapContainer';\nimport './App.css';\n\nconst App = () => (\n  <MapContainer />\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}